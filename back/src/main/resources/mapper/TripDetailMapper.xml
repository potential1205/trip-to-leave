<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.domain.tripdetail.mapper.TripDetailMapper">

    <!-- INSERT INTO trips -->
    <insert id="save" parameterType="com.example.domain.Trip" useGeneratedKeys="true" keyProperty="tripId">
        INSERT INTO trips (
            member_id,
            title,
            content,
            created_at,
            updated_at,
            likes,
            overview,
            start_at,
            end_at,
            headings
        )
        VALUES (
                   #{memberId},
                   #{title},
                   #{content},
                   NOW(),
                   NOW(),
                   #{likes},
                   #{overview},
                   #{startAt},
                   #{endAt},
                   #{headings}
               )
    </insert>

    <!-- UPDATE trips -->
    <update id="update" parameterType="com.example.domain.Trip">
        UPDATE trips
        SET
            member_id = #{memberId},
            title = #{title},
            content = #{content},
            updated_at = NOW(),
            start_at = #{startAt},
            end_at = #{endAt},
            headings = #{headings}
        WHERE
            trip_id = #{tripId}
    </update>

    <insert id="insertTripHashtag">
        INSERT INTO trip_hashtags (trip_id, hashtag_id)
        VALUES (#{tripId}, #{hashtagId});
    </insert>

    <delete id="deleteHashtagsById" parameterType="int">
        DELETE FROM trip_hashtags
        WHERE trip_id = #{tripId}
    </delete>

    <select id="findIdsByTags" resultType="int">
        SELECT hashtag_id
        FROM hashtags
        WHERE hashtag_content IN
        <foreach collection="hashTags" item="tag" open="(" separator="," close=")">
            #{tag}
        </foreach>
    </select>

    <!-- TripDetailDto를 반환하는 쿼리 -->
    <select id="findById" parameterType="int" resultType="com.example.domain.tripdetail.dto.TripDetailDto">
        SELECT
            t.title,
            t.content,
            t.start_at AS startAt,
            t.end_at AS endAt,
            t.headings,
            m.username AS author,
            m.member_id as memberId
        FROM
            trips t
                LEFT JOIN
            members m
            ON
                t.member_id = m.member_id
        WHERE
            t.trip_id = #{tripId}
    </select>

    <delete id="deleteById" parameterType="int">
        DELETE FROM trips
        WHERE trip_id = #{tripId}
    </delete>
</mapper>
